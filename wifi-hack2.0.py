#--------------------------------------------------
# Encrypted By : Siam
# Join TG : t.me/SiamBhau
# GitHub : Siam-Bruh
# Telegram : @SiamBhau
#--------------------------------------------------

_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))